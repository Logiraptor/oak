package templates

import (
	"io"
	"strings"
	"text/template"
)

func FlowApp(wr io.Writer, data interface{}) error {
	return tmpl.ExecuteTemplate(wr, "flowApp", data)
}

func TypeChecker(wr io.Writer, data interface{}) error {
	return tmpl.ExecuteTemplate(wr, "typeChecker", data)
}

var tmpl = template.Must(template.New("root").Funcs(template.FuncMap{
	"join": func(a []string) string {
		return strings.Join(a, ",")
	},
}).Parse(source))

var source = `

{{define "imports"}}
import (
{{range $k, $v := .Imports}}
	{{$k}} "{{$v}}"
{{- end}}
)
{{end}}

{{define "flowApp"}}
	// THIS FILE WAS GENERATED BY THE OAK FLOW TOOL
	package main

	{{template "imports" .App}}

	func main() {
		{{range .App.Components}}
		var {{.Label}} = {{.Func}}
		{{- end}}

		{{$root := .App}}

		{{range .Steps}}
		{{with .LHS}}{{. | join}} := {{end}}{{.Func}}({{.Args | join}})
		{{end}}
	}

{{end}}

{{define "typeChecker"}}

	package flow
	{{template "imports" .}}

	{{range $name, $comp := .Components}}
	var {{$name}} = {{$comp}}
	{{- end}}

{{end}}

`
