Elm.Signal = Elm.Signal || {};
Elm.Signal.Fun = Elm.Signal.Fun || {};
Elm.Signal.Fun.make = function (_elm) {
   "use strict";
   _elm.Signal = _elm.Signal || {};
   _elm.Signal.Fun = _elm.Signal.Fun || {};
   if (_elm.Signal.Fun.values) return _elm.Signal.Fun.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var bimap = F2(function (f1,f2) {    return $Signal.map(function (fs) {    return function (_p0) {    return f2(fs(f1(_p0)));};});});
   var postmap = function (f2) {    return $Signal.map(function (fs) {    return function (_p1) {    return f2(fs(_p1));};});};
   var premap = function (f1) {    return $Signal.map(function (fs) {    return function (_p2) {    return fs(f1(_p2));};});};
   var scan = $Signal.foldp(F2(function (x,y) {    return x(y);}));
   return _elm.Signal.Fun.values = {_op: _op,scan: scan,premap: premap,postmap: postmap,bimap: bimap};
};